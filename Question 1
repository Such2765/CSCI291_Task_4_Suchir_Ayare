// Linking Libraries
#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>
#include <string.h>

// Function prototypes
int processFile(const char *inputFile, const char *outputFile);

// Main Loop
int main() {
    const char *inputFile = "data.txt";
    const char *outputFile = "valid_data.txt";

    int invalidCount = processFile(inputFile, outputFile);
    if (invalidCount >= 0) {
        printf("Number of invalid float values: %d\n", invalidCount);
        printf("Valid float values have been written to %s\n", outputFile);
    }
    return 0;
}

// Function to process the file and filter valid float values
int processFile(const char *inputFile, const char *outputFile) {
    FILE *inFile = fopen(inputFile, "r");
    if (inFile == NULL) {
        perror("Error opening input file");
        return -1;
    }

    FILE *outFile = fopen(outputFile, "w");
    if (outFile == NULL) {
        perror("Error opening output file");
        fclose(inFile);
        return -1;
    }

    // Chararcter buffer array of 100
    char buffer[100];
    int invalidCount = 0;
    double value;

    while (fscanf(inFile, "%s", buffer) != EOF) {
        char *endPtr;
        value = strtod(buffer, &endPtr);

        // If the entire buffer is not consumed, it's invalid
        if (*endPtr != '\0') {
            invalidCount++;
        } else {
            fprintf(outFile, "%.2f\n", value);
        }
    }

    // Check for hardware failure
    if (ferror(inFile)) {
        perror("Error reading input file");
        fclose(inFile);
        fclose(outFile);
        return -1;
    }

    // Cleanup (Close the file)
    fclose(inFile);
    fclose(outFile);

    // Return the count of invalid floats
    return invalidCount;
}
